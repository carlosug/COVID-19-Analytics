"0","# check time frame of the data"
"0","n.col <- ncol(data.confirmed) # 58 variables"
"0","# get dates from column names"
"0","dates <- names(data.confirmed)[5:n.col] %>% substr(2,8) %>% mdy()"
"0","range(dates)"
"1","[1]"
"1"," ""2020-01-22"""
"1"," ""2020-03-19"""
"1","
"
"0","min.date <- min(dates)"
"0","max.date <- max(dates)"
"0","# last update on 16 March 2020 max.date"
"0","# Data Preparation steps:"
"0","# 1.From wide to long format"
"0","# 2.Aggregate by country"
"0","# 3. merge into a signe dataset"
"0","# cleaning and transformation"
"0","cleanData <- function(data) {"
"0","  ## remove some columns"
"0","  data %<>% select(-c(Province.State, Lat, Long)) %>% rename(country=Country.Region) "
"0","  ## convert from wide to long format"
"0","  data %<>% gather(key=date, value=count, -country) "
"0","  ## convert from character to date "
"0","  data %<>% mutate(date = date %>% substr(2,8) %>% mdy()) "
"0","  ## aggregate by country "
"0","  data %<>% group_by(country, date) %>% summarise(count=sum(count)) %>% as.data.frame()"
"0","  return(data)"
"0","}"
"0","# clean the three datasets"
"0","data.confirmed %<>% cleanData() %>% rename(confirmed=count)  "
"0","data.deaths %<>% cleanData() %>% rename(deaths=count)"
"0","data.recovered %<>% cleanData() %>% rename(recovered=count)"
"0","# merge above 3 datasets into one, by country and date"
"0","data <- data.confirmed %>% merge(data.deaths) %>% merge(data.recovered)"
"0","# countries/regions with confirmed cases (excl cruise ships)"
"0","countries <- data %>% pull(country) %>% setdiff('Cruise Ship')"
"0","# first 10 records when it first broke out in China"
"0","data %>% filter(country =='China')%>% head(10)"
